1. Snow Family: Portable offline devices to collect and process data at edge, and migrate data into / out of AWS.
    a. Snowcone(up to Terabytes): 8TB HDD TO 14TD SSD.
    b. Snowball Edge(up to Petabytes): 80TB - 210TB.
    c. why:
        1. Limited Conectivity.
        2. Limited Bandwidth.
        3. High network costs.
        4. Unstable connection.
    d. when:
        If it takes more than a week to transfer data over network, go with snowball devices.
    e. typical steps:
        1. Order the Device: Request a Snowball device through the AWS Management Console.
        
        2. Load Data: Once the device arrives, connect it to your local network and use the AWS OpsHub or the Snowball client to transfer files to the device.
        
        3. Ship the Device Back: After loading your data, ship the device back to AWS using the pre-paid shipping label.
        
        4. Data Transfer to S3: AWS personnel will transfer your data from the Snowball device to your specified Amazon S3 bucket.
        
        5. Device Wiping: After the data transfer, the device is securely erased according to NIST standards, making it ready for the next use.
    
    f. Snowball devices CANNOT directly import data into Amazon Glacier.
        solution: use s3 first, in combination with life cycle policy to transition these objects into glacier.
    
2. Edge Computing: Process data while it's being created on an edge location.(a truck on the road, a ship on the sea, a mining station underground... places that have limited or no access to computing power.)
    a. we can setup a snowball edge /snowcone device to do edge computing.
        1. snowcone: 2 cpus, 4gb memory, wired or wireless access.
        2. snowball edge: 
            a. compute optimized
            b. storage optimized.
        3. can run ec2 instances or lambda functions directly at the edge.
        4. use case:
            a. Preprocessing Data: You can configure these devices to collect and preprocess data before it is sent to the cloud for further analysis. For example, data from sensors on a mining station can be aggregated and filtered to remove noise and reduce volume before transmission.
            
            b. Machine Learning: Deploy machine learning models directly on these devices to perform real-time analysis at the edge. For instance, a Snowball Edge with a GPU can run models that predict equipment failure on a ship or optimize routes for trucks based on immediate data inputs.
            
            c. Transcoding Media: For media applications, these devices can perform onsite media transcoding to adjust the format or quality of video data before it is sent to central servers or delivered to end users.

3. FSx: Launch 3rd party high-performance file system on AWS. 
    a.Its a fully managed service (like what RDS is to DBs)
    b. FSx for:
        1. Lustre
        2. windows file server(for project requring windows fs)
        3. NetApp ONTAP
        4. OpenZFS

        FSx for Lustre and FSx for Windows File Server are highly integrated with AWS services, making them ideal for AWS-based applications needing specialized file system capabilities.
        NetApp ONTAP offers a broad feature set tailored for enterprise-level and hybrid cloud deployments, providing a good balance between performance and data management features.
        OpenZFS is renowned for its robust data protection and integrity features, suited for environments where data corruption prevention is a priority.
    
    c. Region-bound. And just like EFS, multiple instances across different AZs in the same region can access FSx at the same time.

4. FSx for windows: Can be mounted on Linux EC2 instances.  When we say that FSx can be "mounted" on a Linux EC2 instance, we're referring to the process of connecting the EC2 instance to the FSx file system over the network, allowing the instance to access the file system as if it were a local drive.
5. FSx for Lustre: For Machine Learning, and High Performance Computing(HPC)  (Video Processing, Financial Modeling...)
    Deployment Options:
        a. Scratch File System (FSx for Lustre)
            Purpose: Designed for temporary storage and shorter-term, high-speed data processing tasks.
            Data Replication: Typically, data is not replicated across multiple locations within AWS, which can lead to higher risk of data loss if the underlying hardware fails.
            Performance: Offers very high burst throughput, up to six times the baseline rate, which is ideal for workloads that need to process data quickly but do not require long-term persistence.
            Use Cases: Suitable for applications such as stateless computations where data persistency is not critical, or for processing datasets that are replicated elsewhere or can be reconstructed.
        b. Persistent File System (FSx for Lustre)
            Purpose: Provides durable file storage that's suitable for longer-term and critical data storage needs.
            Data Replication: Data is typically replicated within the file system to protect against the loss of an individual disk or server.
            Performance: Offers lower burst throughput compared to scratch configurations but provides a higher baseline performance and greater data durability.
            Use Cases: Ideal for use cases that require a combination of high performance and data durability, such as ML model training where data needs to be readily available over a longer period, or complex scientific computations involving large, persistent datasets.

        
6. Storage Geteway: AWS Storage Gateway is a hybrid cloud storage service that allows you to seamlessly connect and extend your on-premises environments to AWS cloud storage.
    a. bridge between on-premises data and cloud data.
        1. disaster recovery
        2. backup and restore.
        3. tiered storage (warm data / cold data)
        4. on-premises cache & low-latency file access.
    b. Types:
        1. S3 File Gateway
        2. FSx File Gateway
        3. Volumn Gateway
        4. Tape Gateway

7. S3 File Gateway
    a. S3 types applied(No Glacier): Standard / Standard IA / One Zone-IA / Intelligent-Tiering. 
    b. on premises server <- NFS or SMB -> S3 File Gateway <- HTTPS -> S3 on cloud.
    c. if you want to archive these data, you can create a lifecyle policy for this bucket to transition it into Glacier.
    d. whatever buckets you configure with your S3 File Gateway, are going to be accessible using the NFS and SMB protocol.
    e. Most recently used data is cached in the file gateway.
    f. bucket access using IAM roles for each file gateway.
    e. SMB protocol has integration with Active Directory(AD) for user authentication.

8. FSx File Gateway.
    a. Native access to Amazon FSx for windows file server.
    b. Local cache for frequently accessed data. (main reason for "why bother using a file gateway when we can connect to it directly")
    c. useful for group file shares and home directories.

9. Volumn Gateway
    a. Block storage using iSCSI protocol backed by S3.
    b. Backed by EBS snapshots which can help restore on-premises volumes.
    c. Two types:
        1. Cached volumes: low latency access to most recent data.
        2. Stored volumes: entire dataset is on premises, scheduled backups to S3.
    d. on premises server <- iSCSI -> Volumn Gateway <- HTTPS -> S3 bucket <-> EBS snapshot

10. Tape Gateway
    a. Some companies have backup processes using physical tapes.
    b. With Tape Gateway, companies use the same processes but, in the cloud.
    c. Virtual Tape Library(VTL) backed by Amazon S3 and Glacier.
    d. Back up data using existing tape-based processes (and iSCSI interface)
    e. works with leading backup software vendors.

11. Storage Gateway - Hardware appliance
    a. using storage gateway requires that you have on-premises virtualization in place. IF THAT IS NOT THE CASE, then you need Storage Gateway Hardware Appliance.
    b. you can buy it from Amazon.
    c. its a hardware you can install on your infrastructure.
    d. works with File Gateway, Volume Gateway, Tape Gateway.
    e. has required CPU, memory, network, SSD cache resorces.
    f. Helpful for daily NFS backups in small data centers where you don't have virtualization available.

12. Storage Gateway Summary
    a. on-premises Gateway Deployment Options:
        1. VM
        2. Hardware Appliance.

13. Facts in case interested:
    
    NFS (Network File System) and SMB (Server Message Block) are two widely used network protocols that allow devices to share files and resources over a network. Both are fundamental in enterprise networking and have specific characteristics that make them suitable for different use cases.

14. AWS Transfer Family: A fully managed service for file transfers into and out of amazon s3 or amazon EFS using the FTP protocol.
    a. Supported Protocols:
        1. AWS Transfer for FTP (File Transfer Protocol(FTP))  (unencrypted)
        2. AWS Transfer for FTPS (File Transfer Protocol over SSL(FTPS)) (encrypted)
        3. AWS Transfer for SFTP (Secure File Transfer Protocol(SFTP)) (encrypted)
    b. Managed infrastructure, Scalable, Reliable, Highly Available(multi-AZ)
    c. Per per provisioned endpoint per hour + data transfers in GB.
    d. you can either:
        1. Store and manage users' credentials within the service.
        2. or integrate with existing authentication systems(Microsoft Active Directory, LDAP...)
        3. Usage: sharing files, public datasets, CRM, ERP...
    e. AWS Transfer Family and regular HTTP methods (GET for downloading and POST for uploading) serve similar purposes in that they allow for the transfer of files between systems. However, they have key differences in terms of functionality, security, integration, and use cases:
        1. AWS Transfer Family utilizes FTP, FTPS, and SFTP, which are dedicated file transfer 2. protocols designed specifically for secure and efficient file sharing.
HTTP GET and POST are part of the HTTP protocol primarily used for web communications. While they can handle file transfers, they are not specifically optimized for this purpose.
        3. In summary, while both AWS Transfer Family and regular HTTP methods can facilitate file transfers, AWS Transfer Family offers specialized, secure, and managed services that are particularly beneficial for complex, secure, or large-scale enterprise file sharing needs. This makes it a more robust choice for businesses that require reliability, security, and integration with enterprise systems.

15. AWS DataSync
    a. Move large amount of data to and from:
        1. On-premises / other cloud to AWS(NFS, SMB, HDFS, S3 API ...) - needs agent
        2. AWS to AWS (different storage services) - no agent needed.
    b. Can synchronize to:
        1. Amazon S3(any storage classes - including Glacier)
        2. Amazon EFS
        3. Amazon FSX
    c. Replication tasks can be schduled hourly / daily / weekly  (hence they are NOT continuous)
    d. File permissions and metadata are preserved(NFS POSIX, SMB...) (exam: this is the unique option which preserves metadata when moving.)
    e. One agent task can use 10 Gbps. Can setup a bandwidth limit if you don't wanna max out your network.
    f. example:
        on premises server <- NFS or SMB -> AWS Datasync Agent(on premises) <- TLS -> AWS DataSync service(on cloud) <-> S3 / EFS / FSx

    e. what if we don't have the network capacity to do the sync?
        solution: Snowcone device, it comes with data sync agent pre-installed. You can run snowcone on-premises, which will pull your data and run the agent, and then be shipped back into your aws region, sync with AWS.

16. Storage Comparison:
    a. Block Storage: EBS and EC2 instance Store.
    b. File Storage: Amazon EFS and Amazon FSx.
    c. Object Storage: Amazon S3 and Amazon Glacier

17. Comparison:
    1. S3: Object Storage
    2. S3 Glacier: Object Archival
    3. EBS volumes: Network storage for one EC2 instance at a time
    4. Instance Storage: Physical storage for your EC2 instance (high IOPS)
    5. EFS: Network File System for Linux instances, POSIX filesystem
    6. FSx for Windows: Network File System for Windows servers
    7. FSx for Lustre: High Performance Computing Linux file system
    8. FSx for NetApp ONTAP: High OS Compatibility
    9. FSx for OpenZFS: Managed ZFS file system
    10. Storage Gateway: S3 & FSx File Gateway, Volume Gateway (cache & stored), Tape Gateway
    11. Transfer Family: FTP, FTPS, SFTP interface on top of Amazon S3 or Amazon EFS
    12. DataSync: Schedule data sync from on-premises to AWS, or AWS to AWS
    13. Snowcone / Snowball / Snowmobile: to move large amount of data to the cloud, physically
    14. Database: for specific workloads, usually with indexing and querying